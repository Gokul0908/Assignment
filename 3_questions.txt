--3.1 Select all warehouses.
Select *from  warehouses;

--3.2 Select all boxes with a value larger than $150.

select * from boxes where value>150;

--3.3 Select all distinct contents in all the boxes.

select distinct(contents) "distinct boxes"from boxes;

--3.4 Select the average value of all the boxes.

select avg(value) as average_value from boxes;

SELECT code, AVG(value) AS average_box_value
FROM boxes
GROUP BY code;

--3.5 Select the warehouse code and the average value of the boxes in each warehouse.
select Code,avg(value) as avgValue from boxes group by code ;
--3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.
select Code,avg(value) as avgValue from boxes  where value > 150 group by code ;
--3.7 Select the code of each box, along with the name of the city the box is located in.
select b.code, w.location from boxes b join warehouses w on b.warehouse=w.code;
--3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
select code 
    -- Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of 
omitting the warehouse  from the result).

select w.code,count(b.code) from warehouses w join boxes b on w.code = b.warehouses gropu by w.code ;


--3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).


--3.10 Select the codes of all the boxes located in Chicago.
select b.code, w.location from boxes b join warehouses w on b.warehouse=w.code
where w.location ='chicago';
--3.11 Create a new warehouse in New York with a capacity for 3 boxes.
update warehouses set capacity = 3
where location = 'New York';
insert into warehouses values (6,'New York',7);
update warehouses set capacity = 3
where code=6;
--3.12 Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.
insert into boxes values('H5RT','papers',200,2);
--3.13 Reduce the value of all boxes by 15%.
select value-(15/100)  from boxes ;
--3.14 Remove all boxes with a value lower than $100.
DELETE FROM boxes
WHERE value < 100;

-- 3.15 Remove all boxes from saturated warehouses.
DELETE FROM boxes
WHERE warehouse IN (
    SELECT warehouse
    FROM warehouses
    WHERE some_condition_for_saturated_warehouses
);

-- 3.16 Add Index for column "Warehouse" in table "boxes"
-- !!!NOTE!!!: index should NOT be used on small tables in practice


       CREATE INDEX idx_warehouse ON boxes (Warehouse);


-- 3.17 Print all the existing indexes
-- !!!NOTE!!!: index should NOT be used on small tables in practice
    
    
       SHOW INDEXES FROM boxes;

-- 3.18 Remove (drop) the index you added just
-- !!!NOTE!!!: index should NOT be used on small tables in practice
          DROP INDEX idx_warehouse on boxes;
